ls
pwd
mkdir <Give foldername>
cd
git --version
touch <filename>
cat <filename>
vim <filename>


Git Commands
------------
init
status
add
commit
log
config

1) How to initialize Git File
2) How to stage the Git files
3) How to commit Git files in local Repository
4) How to check the status of Github
5) How to configure the Git file
6) How to check the Git logs for changes

git init
git status
git add a.txt b.txt
git status
git config --global user.email "ravilella.1981@gmail.com"
git config --global user.name "ravilella1234"
git commit -m "this is my first commit"
git status
git log
Do some changes in the above files a.txt & b.txt
git status
git commit -a -m "both files are modified"
git status
git log

1) How to clone repository from Git?
2) How to Push code onto remote repository?
3) How to Pull code changes from remote repository?

git clone 'Give here your Remote repository Name'
-To modify the existing file
ls
cat your filename
vim your filename
click on Insert Button in keyboard and edit the file and click on escape button  & type :wq
Then we have to do staging  & commit
git add .
git commit -m "updated files"
git log --oneline
git push origin main
git pull origin main
cat filename


touch <filename>
Use touch when you want to quickly create an empty file or update an existing file's timestamp.

cat <filename>
Use cat when you want to view the content of a file without editing it.

vim <filename>
Use vim when you need to edit, create, or manipulate the content of a file interactively.




git checkout <filename>

ls (Linux/Unix command) Purpose: Lists files and directories in a specified directory on your local file system.

git ls-files (Git command) Purpose: Lists all files tracked by Git in the current repository.


Remove files from both staging & working directory
git rm <fileName> Purpose: Removes a specific file from the Git repository and the working directory.

git rm -r .  Purpose: Recursively removes all files and directories in the current directory from the Git repository and the working directory.


If you want to keep the file locally but remove it from Git, you can use the --cached flag
git rm --cached <fileName>


If you want to keep the files locally but remove them from Git, you can use the --cached
git rm -r --cached .

Remove files only from working Directory
rm <filename>


Git Branching Commands
----------------------
1) View available branchs
     git branch
     git status

2) Create new branch
     git branch <branch name>
     git status

3) How to Switch to the branch
     git checkout <branch name>
     git branch

4) How to Create a new branch and Switch to branch
     git checkout -b <branch name>
     git status

     touch <fileName1> <fileName2> <>...
     ls
     git add <fileName1>;git commit -m <fileName1>
     git add <fileName2>;git commit -m <fileName2>
     git ls-files


Merging Branchs - Merging should happen while being in Master Branch

1) Fast-forward Merge --> git merge <child branch name>
2) Three-way Merge


Merging conflicts
-----------------
git merge <child branch name>
cat filename.txt
vim filename.txt
dd
cat filename.txt
git add filename.txt;git commit -m "commit message"
git log --oneline
git log --oneline --graph

To delete the branch
--------------------
git branch
git branch -d <name of Branch>

